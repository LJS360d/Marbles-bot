<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Marbles Management</title>
    <style>
        @import url('https://fonts.cdnfonts.com/css/montserrat');

        body {
            font-family: 'Montserrat', sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f5f5f5;
            overflow: hidden;
        }

        h1 {
            color: #333;
            font-size: 32px;
            margin-bottom: 20px;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        h2 {
            color: #777;
            font-size: 24px;
            margin-bottom: 10px;
        }

        lb {
            font-weight: 600;
        }

        ul {
            list-style: none;
            padding: 0;
            overflow-y: auto;
            overflow-x: hidden;
        }

        li {
            margin-bottom: 10px;
            background-color: #fff;
            padding: 10px;
            border-radius: 4px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);

            display: flex;
            align-items: center;
            gap: 2rem;
            justify-content: space-between;
        }

        li div {
            gap: 0.5rem;
            display: flex;
            align-items: center;
        }

        img.guild-icon {
            height: 5rem;
            aspect-ratio: 1;
        }

        .guilds-wrapper {
            display: flex;
            flex-direction: row;
            flex-wrap: wrap;
            align-items: flex-start;
        }

        .guild-wrapper {
            display: flex;
            flex-direction: column;
            font-size: .9pc;
        }

        .channels-wrapper {
            min-width: 24rem;
            display: flex;
            align-items: flex-start;
            flex-direction: row;
            flex-wrap: wrap;
        }

        #remaining-time {
            font-weight: bold;
        }
    </style>
</head>

<h1><img class="guild-icon" src="<%=client.user.avatarURL()%>">
    <%= client.user.tag%>
</h1>
<hr>
<span>Currently part of <b>
        <%=guilds.size%> guilds
    </b></span>

<div>Next guaranteed spawn in:<span id="remaining-time">
        <%= time %>
    </span></div>
<ul>
    Active Channels: <b>
        <%= Array.from(channels).length%>
    </b>
    <div class="channels-wrapper">

        <% channels.forEach((channel)=>{ %>
            <li>
                #<%= channel %>
            </li>
            <%});%>
    </div>
</ul>
<div class="guilds-collections">
    Guilds:
    <ul class="guilds-wrapper">
        <% guilds.forEach((guild)=> { %>
            <li>
                <div class="guild-wrapper">
                    <span>
                        <%= guild.name %>
                    </span>
                    <img class="guild-icon" src="<%=guild.iconURL()%>">
                    <span>
                        <%= guild.memberCount%> members
                    </span>
                </div>

            </li>
            <% }); %>
    </ul>
    Collections:
    <ul class="collections-wrapper">
        <% collections.forEach(collection=> { %>
            <li>
                <div class="collection-wrapper">
                    <%= `${(collection.userId)} in`%>
                        <b>
                            <%=guilds.get(collection.guildId)%>
                        </b>:
                        <b>
                            <%= collection.size %> Marbles
                        </b>

                </div>
                <%});%>
            </li>
    </ul>
</div>
<script>
    function updateRemainingTime() {
        const remainingTimeElem = document.getElementById('remaining-time');
        const updatedTime = formatTime(parseTimeToMilliseconds(remainingTimeElem.textContent) - 1000)
        remainingTimeElem.textContent = updatedTime
    }

    updateRemainingTime();

    setInterval(updateRemainingTime, 1000);

    function formatTime(milliseconds) {
        const date = new Date(milliseconds);
        const hours = date.getUTCHours().toString().padStart(2, '0');
        const minutes = date.getUTCMinutes().toString().padStart(2, '0');
        const seconds = date.getUTCSeconds().toString().padStart(2, '0');
        return `${hours}:${minutes}:${seconds}`;
    }
    function parseTimeToMilliseconds(time) {
        const [hours, minutes, seconds] = time.split(':');
        const milliseconds = (parseInt(hours, 10) * 60 * 60 * 1000) +
            (parseInt(minutes, 10) * 60 * 1000) +
            (parseInt(seconds, 10) * 1000);
        return milliseconds;
    }
</script>
</body>

</html>